#!/bin/bash

# A script that tries to find CN failures 

# Location of the csmith runtime libraries. See README.md for how to set this up 
csmith_runtime=/Users/miked/Projects/VERSE/VERSE-Toolchain/scripts/csmith/runtime

# csmith parameter values 
csmith_params="--no-float"

# The exit code of interest 
code=125

# Number of file generation attempts 
maxattempts=1000
# Target number of files to generate 
maxexamples=10

# Create a temporary file
timestamp=$(date +%Y%m%d%H%M%S)
mktmpfile=$(mktemp creduce_tmp.XXXXXX)
tmpfile="${mktmpfile}.c"
mv "$mktmpfile" "$tmpfile"

# Delete the file on exit 
trap "rm -f '$tmpfile'" EXIT

# creduce doesn't allow arguments to the 'interestingness test' script. We get
# around this by setting env vars holding the file location and target exit code 
export CREDUCE_TARGET_FILE="${tmpfile}"
export CREDUCE_TARGET_CODE=$code
export CSMITH_RUNTIME=$csmith_runtime

# iteration variables 
attempts=0
examples=0

# Create the examples directory if it doesn't already exist 
mkdir ./examples 

printf "Searching "

while [[ $attempts -lt $maxattempts ]] && [[ $examples -lt $maxexamples ]]; do
  # Generate the test file 
  csmith $csmith_params > "${tmpfile}"

  # Check that csmith generated a compilable file. If this fails, the most
  # common cause is you messed up the runtime path 
  if ! gcc -I "$csmith_runtime" -c "${tmpfile}" -o /dev/null >/dev/null 2>&1; then
    printf "\nFailed to compile the original file generated by csmith. This probably means something went wrong." >&2
    exit 1
  fi

  # Test whether the file passes the interestingness test
  if sh ./test-with-cn.sh; then
    printf "X"

    # Copy the file 
    copyname="${timestamp}_${examples}"
    cp "${tmpfile}" "./examples/${copyname}_original.c"

    # Reduce the file 
    creduce --tidy test-with-cn.sh "${tmpfile}" >/dev/null 2>&1

    # Copy the result 
    cp "${tmpfile}" "./examples/${copyname}_reduced.c"

    ((examples++))
  else 
    printf "."
  fi
  ((attempts++))
done
printf "\n"
